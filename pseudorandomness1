type mytype[large, fixed].
fun G(mytype): mytype.
fun G'(mytype): mytype.
param n1, n2.
query secret1 w.
proba POW.
equiv
	foreach i1<=n1 do
            r <-R mytype;
            OGet():=return (G'(r))
     
  	 <=(0)=> (*da definire*)
	
	foreach i1 <=n1 do
             w <-R mytype;
             OGet():=return(w).


forall x:mytype; G(x)=(G'(G'(x))).

let processO=
	foreach i1 <=n2 do
		O():=
			foreach n <=n2 if defined( r[n]) then return.
let processA=
	foreach i2<=n2 do
		Oz():=b<-R bool;
			if(b=true) then r <-R	mytype
			else
						r:mytype <-G'(r);
			return (r).
		

process processA|processO


