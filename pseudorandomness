type seed[fixed, large].
type codG'[fixed, large].
type codG[fixed, large].

fun G(seed) : codG.
fun G'(seed) : codG'.

param n1, n2, n3.
event distinguished.
proba POW.
(*query event distinguished ==> false.*)
query secret1 x.
(*
equiv
	foreach i1 <=n1 do
			w <-R codG';
			OGet():=return(w)
	   
    <=(n1*2)=> 
    
	foreach i1<=n1 do
			r1 <-R seed;
			OGet():=return (G'(r1)).
*)
equiv
	foreach i1<=n1 do
            r <-R seed;
            OGet():=return (G'(r))
     
  	 <=(n1*2)=> (*da definire*)
	
	foreach i1 <=n1 do
             w <-R codG';
             OGet():=return(w).


process 	
		foreach i2 <= n2 do
					O():=
						 s <-R seed;
						 x: codG' <- G'(s);
						 return
					
